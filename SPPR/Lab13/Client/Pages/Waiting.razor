@page "/waiting"

@inject NavigationManager NavigationManager
@inject IGameService GameService

@implements IDisposable

<div class="container">
	<span class="loader" style="transform: scale(5) translateY(50px);"></span>
</div>

@code
{
	[SupplyParameterFromQuery]
	[Parameter]
	public string GameId { get; set; } = "";

	[SupplyParameterFromQuery]
	[Parameter]
	public string Username { get; set; } = "";

	private IDisposable? _notify;
	private IDisposable? _start;

	protected async override Task OnInitializedAsync()
	{

		await GameService.ConnectToHub();

		await Console.Out.WriteLineAsync($"/arrangement?GameId={GameId}&Username={Username} in waiting");

		_notify = GameService.CreateConnection("Notify", () =>
		{
			NavigationManager.NavigateTo($"/arrangement?GameId={GameId}&Username={Username}");
		});
		_start = GameService.CreateConnection("Start", () =>
		{
			NavigationManager.NavigateTo($"/play?GameId={GameId}&Username={Username}");
		});
	}

	public void Dispose()
	{
		_notify?.Dispose();
		_start?.Dispose();
	}
}