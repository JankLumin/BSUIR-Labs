@using MonopolyGame.Shared.Models
@using MonopolyGame.Client.Services
@using MonopolyGame.Client.Components
@page "/game/{GameId}"
@inject ClientGameLogic GameLogic
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Игра: @GameId</h3>

<GameBoard GameState="currentGameState" />

<button @onclick="MakeMove">Сделать ход</button>

@code {
    [Parameter]
    public string GameId { get; set; }

    private GameState currentGameState;

    protected override async Task OnInitializedAsync()
    {
        GameLogic.OnGameStateUpdated += HandleGameStateUpdated;
        await GameLogic.StartConnectionAsync();
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User.Identity.Name;
        if (!string.IsNullOrEmpty(user))
        {
            await GameLogic.JoinGameAsync(GameId, user);
        }
    }

    private void HandleGameStateUpdated(GameState gameState)
    {
        currentGameState = gameState;
        InvokeAsync(StateHasChanged);
    }

    private async Task MakeMove()
    {
        var move = new Move { Steps = new Random().Next(1, 7) }; // Пример броска кубиков (1-6)
        await GameLogic.MakeMoveAsync(GameId, move);
    }

    public void Dispose()
    {
        GameLogic.OnGameStateUpdated -= HandleGameStateUpdated;
    }
}
