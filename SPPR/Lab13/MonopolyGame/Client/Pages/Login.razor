@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage
@inject ApiAuthenticationStateProvider AuthenticationStateProvider

<h3>Авторизация</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Имя пользователя:</label>
        <InputText @bind-Value="loginModel.Username" />
    </div>
    <div>
        <label>Пароль:</label>
        <InputText @bind-Value="loginModel.Password" type="password" />
    </div>
    <button type="submit">Войти</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("api/auth/login", loginModel);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResult>();
            if (result != null && !string.IsNullOrEmpty(result.Token))
            {
                await LocalStorage.SetItemAsync("authToken", result.Token);
                AuthenticationStateProvider.NotifyUserAuthentication(result.Token);
                Navigation.NavigateTo("/");
            }
        }
        else
        {
            // Обработка ошибок
        }
    }

    public class LoginModel
    {
        [Required]
        public string Username { get; set; }

        [Required]
        public string Password { get; set; }
    }

    public class LoginResult
    {
        public string Token { get; set; }
    }
}
